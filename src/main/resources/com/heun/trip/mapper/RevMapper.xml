<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.heun.trip.dao.RevDao">
  
  <resultMap type="rev" id="revMap">
    <id column="rev_id" property="no"/>
    <result column="usr_id" property="userNo"/>
    <result column="stus_id" property="stusNo"/>
    <result column="rms_id" property="rmsNo"/>
    <result column="cck_in" property="checkIn"/>
    <result column="cck_out" property="checkOut"/>
    <result column="rev_stus" property="revStus"/>
    <result column="stby_stus" property="stanBy"/>
    <result column="rev_persn" property="revPerson"/>
    <result column="rev_cdt" property="createdDate"/>
    <result column="rev_char" property="revCharge"/>
    <result column="rev_updt" property="revUpdate"/>
    <result column="rev_reas" property="revReason"/>
    
    <result column="rm_name" property="rmsName"/>
    <result column="addr" property="address"/>
    <result column="thum" property="thumbnail"/>
    <result column="stus" property="status"/>
  </resultMap>
  
  <resultMap type="riw" id="riwMap">
    <id column="riw_id" property="no"/>
    <result column="usr_id" property="userNo"/>
    <result column="rms_id" property="roomNo"/>
  </resultMap>
  
  <insert id="inupdate" parameterType="Rev">
    insert into rev(
      usr_id,
      stus_id,
      rms_id,
      cck_in,
      cck_out,
      stby_stus,
      rev_persn,
      rev_char,
      rev_updt,
      rev_reas)
      
    values (
      #{userNo},
      #{stusNo},
      #{rmsNo},
      #{checkIn},
      #{checkOut},
      #{stanBy},
      #{revPerson},
      #{revCharge},
      #{revUpdate},
      #{revReason}
    )
  
  </insert>
  
  <select id="findAll" resultMap="revMap" parameterType="map">
    select
     r.rm_name,
     r.addr,
     r.thum,
     e.rev_id,
     e.usr_id,
     e.rms_id,
     e.stus_id,
     e.cck_in,
     e.cck_out,
     e.stby_stus,
     e.rev_persn,
     e.rev_char,
     s.stus
    from rev e
     left outer join rms r on e.rms_id = r.rms_id
     left outer join stus s on e.stus_id = s.stus_id
    where
      e.usr_id = 1
    order by 
      e.rev_id desc 
    <if test="size != null and rowNo != null">
      limit #{rowNo}, #{size}
    </if>
  </select>
  
  <select id="findByNo" resultMap="revMap" parameterType="int">
    select
     r.rm_name,
     r.addr,
     r.thum,
     e.rev_id,
     e.usr_id,
     e.rms_id,
     e.stus_id,
     e.cck_in,
     e.cck_out,
     e.stby_stus,
     e.rev_persn,
     e.rev_char,
     s.stus
    from rev e
     left outer join rms r on e.rms_id = r.rms_id
     left outer join stus s on e.stus_id = s.stus_id
    where e.rev_id=#{no}
  </select>
  
  <select id="count" parameterType="map" resultType="int">
    select 
     count(*) 
    from 
     riw 
    where 
     usr_id=#{userNo} and rms_id=#{roomNo}
  </select>
  
  <select id="countAll" resultType="int" parameterType="int">
    select count(*) from rev where usr_id=#{no}
  </select>
  
      <delete id="delete" parameterType="int">
    delete from rev 
    where rms_id = #{value}
  </delete>
  
  
</mapper>


 







